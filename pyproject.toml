[project]
name = "timegroups"
version = "0.1.2"
description = "Collection of utilities to group time series data using pandas"
readme = "README.md"
authors = [
    { name = "Matthias TelÃ¶ken", email = "matthias.teloeken@posteo.de" }
]
requires-python = ">=3.12"
license = "MIT"
license-files = ["LICEN[CS]E*"]
dependencies = [
    "pandas>=2.2.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]
sources = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--import-mode=importlib"]

[tool.ruff]
line-length = 120
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    "ANN",  # mypy
    "ARG",  # flake8-unused-arguments
    "B",  # Bugbear
    "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "E",  # pycodestyle
    "F",  # Pyflakes
    "FLY",  # flynt
    "FA",  # flake8-fututre-annotations
    "I",  # isort
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "UP",  # pyupgrade
    "W",  # pycodestyle
    "C90",  # mccabe
]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
autoSearchPaths = false
typeCheckingMode = "basic"
reportShadowedImports = "warning"
reportMissingTypeStubs = false
executionEnvironments = [
    { root = "src" },
]

[tool.uv.sources]
timegroups = { workspace = true }
